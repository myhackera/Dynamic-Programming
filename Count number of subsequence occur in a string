RECURSIVE SOLUTION :
============================================>>>>>

def count(a, b, m, n):

	if ((m == 0 and n == 0) or n == 0):
		return 1

	if (m == 0):
		return 0

	if (a[m - 1] == b[n - 1]):
		return (count(a, b, m - 1, n - 1) + count(a, b, m - 1, n))
	else:
		return count(a, b, m - 1, n)

# Driver code
a = "GeeksforGeeks"
b = "Gks"

print(count(a, b, len(a),len(b)))

BOTTOM-UP APPROACH
=========================================>>>>

def count(a, b):
	m = len(a)
	n = len(b)

	lookup = [[0] * (n + 1) for i in range(m + 1)]

	# If first string is empty
	for i in range(n+1):
		lookup[0][i] = 0

	# If second string is empty
	for i in range(m + 1):
		lookup[i][0] = 1

	for i in range(1, m + 1):
		for j in range(1, n + 1):
		
			if a[i - 1] == b[j - 1]:
				lookup[i][j] = lookup[i - 1][j - 1] + lookup[i - 1][j]
				
			else:
				lookup[i][j] = lookup[i - 1][j]

	return lookup[m][n]

# Driver code
if __name__ == '__main__':
	a = "GeeksforGeeks"
	b = "Gks"

	print(count(a, b))



