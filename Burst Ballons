import sys
class Solution:
    def maxCoins(self, nums: List[int]) -> int:
        
#         def ballons(nums, dp):
        
#             if not nums:
#                 return 0
#             if len(nums) == 1:
#                 return nums[0]
            
#             maxx = 0    
            
#             for i in range(len(nums)):
#                 if dp[i] != -1:
#                     return dp[i]
#                 curr = nums[i]
                
#                 curr *=  1 if i == 0 else nums[i-1]
#                 curr *= 1 if i == len(nums)-1 else nums[i+1]
                
#                 curr += ballons(nums[:i]+nums[i+1:], dp)
                
#                 maxx = max(maxx, curr)
#                 dp[i] = maxx
                
#             return dp[i]
       
#         dp = [-1]*len(nums)
#         return ballons(nums, dp) 

        def burst(nums, l, r, dp):
            
            res = 0
            if dp[l][r] != -1:
                return dp[l][r]
            for i in range(l+1, r):
                coins = nums[l]*nums[i]*nums[r]
                leftres = burst(nums, l, i, dp)
                rightres = burst(nums, i, r, dp)
                res = max(res, coins+leftres+rightres)
            dp[l][r] = res
            return dp[l][r]
                
        nums = [1] + nums + [1]
        dp = [[-1 for _ in range(len(nums))] for _ in range(len(nums))]
        return burst(nums, 0, len(nums)-1, dp)
