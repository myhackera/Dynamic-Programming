class Solution:
    def minCost(self, cost, n, dp):
        
        if n < 0:
            return 0
        if n == 0 or n == 1:
            return cost[n]
        if dp[n] != 0:
            return dp[n]
        else:
            dp[n] = cost[n] + min(self.minCost(cost, n-1, dp), self.minCost(cost, n-2, dp))
        return dp[n]
    
    
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        
        n = len(cost)
        dp = [0 for i in range(n)]
        return min(self.minCost(cost, n-1, dp), self.minCost(cost, n-2, dp))
    
    
